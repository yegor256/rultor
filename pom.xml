<?xml version="1.0"?>
<!--
 * Copyright (c) 2009-2021 Yegor Bugayenko
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met: 1) Redistributions of source code must retain the above
 * copyright notice, this list of conditions and the following
 * disclaimer. 2) Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following
 * disclaimer in the documentation and/or other materials provided
 * with the distribution. 3) Neither the name of the rultor.com nor
 * the names of its contributors may be used to endorse or promote
 * products derived from this software without specific prior written
 * permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
 * NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
 * THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.jcabi</groupId>
        <artifactId>parent</artifactId>
        <version>0.37.1</version>
    </parent>
    <groupId>com.rultor</groupId>
    <artifactId>rultor</artifactId>
    <version>2.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>rultor</name>
    <description>Rultor.com, Coding Team Assistant</description>
    <url>https://www.rultor.com</url>
    <inceptionYear>2009</inceptionYear>
    <organization>
        <name>Rultor Inc.</name>
        <url>https://www.rultor.com</url>
    </organization>
    <licenses>
        <license>
            <name>BSD</name>
            <url>http://doc.rultor.com/LICENSE.txt</url>
            <distribution>site</distribution>
        </license>
    </licenses>
    <developers>
        <developer>
            <id>1</id>
            <name>Yegor Bugayenko</name>
            <email>yegor256@gmail.com</email>
            <organization>Zerocracy</organization>
            <organizationUrl>https://www.zerocracy.com</organizationUrl>
            <roles>
                <role>Architect</role>
                <role>Developer</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
    </developers>
    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/yegor256/rultor/issues</url>
    </issueManagement>
    <scm>
        <connection>scm:git:git@github.com:yegor256/rultor.git</connection>
        <developerConnection>scm:git:git@github.com:yegor256/rultor.git</developerConnection>
        <url>https://github.com/yegor256/rultor</url>
    </scm>
    <ciManagement>
        <system>travis</system>
        <url>https://travis-ci.org/yegor256/rultor</url>
    </ciManagement>
    <distributionManagement>
        <site>
            <id>github-pages</id>
            <url>http://doc.rultor.com</url>
        </site>
    </distributionManagement>
    <properties>
        <timestamp>${maven.build.timestamp}</timestamp>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.takes</groupId>
            <artifactId>takes</artifactId>
            <version>1.9.2</version>
        </dependency>
        <dependency>
            <groupId>io.sentry</groupId>
            <artifactId>sentry</artifactId>
            <version>1.3.0</version>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-core</artifactId>
            <version>1.10.66</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-s3</artifactId>
            <version>1.10.66</version>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-ecs</artifactId>
            <version>1.10.66</version>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-dynamodb</artifactId>
            <version>1.10.66</version>
        </dependency>
        <dependency>
            <groupId>com.jcabi.incubator</groupId>
            <artifactId>xembly</artifactId>
            <version>0.22</version>
        </dependency>
        <dependency>
            <groupId>org.twitter4j</groupId>
            <artifactId>twitter4j-core</artifactId>
            <version>4.0.4</version>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>org.cactoos</groupId>
            <artifactId>cactoos</artifactId>
            <version>0.25.3</version>
        </dependency>
        <dependency>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
        </dependency>
        <dependency>
            <groupId>co.stateful</groupId>
            <artifactId>java-sdk</artifactId>
            <version>0.13.1</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>javax.json</groupId>
            <artifactId>javax.json-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>1.16</version>
        </dependency>
        <dependency>
            <groupId>com.jcabi</groupId>
            <artifactId>jcabi-urn</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jcabi</groupId>
            <artifactId>jcabi-aspects</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jcabi</groupId>
            <artifactId>jcabi-log</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jcabi</groupId>
            <artifactId>jcabi-dynamo</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jcabi</groupId>
            <artifactId>jcabi-s3</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jcabi</groupId>
            <artifactId>jcabi-ssh</artifactId>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.jcabi</groupId>
            <artifactId>jcabi-matchers</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jcabi</groupId>
            <artifactId>jcabi-xml</artifactId>
            <version>0.17.2</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-core</artifactId>
            <version>1.19</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jcabi</groupId>
            <artifactId>jcabi-http</artifactId>
            <version>1.14.2</version>
        </dependency>
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.8.3</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>1.7</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.jcabi</groupId>
            <artifactId>jcabi-immutable</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jcabi</groupId>
            <artifactId>jcabi-manifests</artifactId>
        </dependency>
        <dependency>
            <groupId>org.ocpsoft.prettytime</groupId>
            <artifactId>prettytime</artifactId>
            <version>4.0.1.Final</version>
        </dependency>
        <dependency>
            <groupId>com.jcabi</groupId>
            <artifactId>jcabi-github</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>com.jcabi</groupId>
            <artifactId>jcabi-email</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <version>1.1.1</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.5.0-b01</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mailapi</artifactId>
            <version>1.4.3</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.saxon</groupId>
            <artifactId>saxon</artifactId>
            <version>9.1.0.8</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.saxon</groupId>
            <artifactId>saxon</artifactId>
            <version>9.1.0.8</version>
            <classifier>dom</classifier>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.saxon</groupId>
            <artifactId>saxon</artifactId>
            <version>9.1.0.8</version>
            <classifier>xpath</classifier>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-transcoder</artifactId>
            <version>1.8</version>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-codec</artifactId>
            <version>1.8</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>xmlgraphics-commons</artifactId>
            <version>2.1</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-artifact</artifactId>
            <version>3.3.9</version>
        </dependency>
        <dependency>
            <groupId>com.github.docker-java</groupId>
            <artifactId>docker-java</artifactId>
            <version>2.2.3</version>
        </dependency>
    </dependencies>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>1.4.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>1.4.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.6.0</version>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.10</version>
                </plugin>
                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <configuration>
                        <argLine>-Djava.awt.headless=true</argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <argLine>-Duser.language=en -Duser.region=US -Djava.awt.headless=true</argLine>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-java</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>[1.7,)</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>nl.geodienstencentrum.maven</groupId>
                <artifactId>sass-maven-plugin</artifactId>
                <version>2.15</version>
                <executions>
                    <execution>
                        <id>generate-css</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>update-stylesheets</goal>
                        </goals>
                        <configuration>
                            <sassSourceDirectory>${basedir}/src/main/scss</sassSourceDirectory>
                            <destination>${project.build.directory}/css</destination>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.samaxes.maven</groupId>
                <artifactId>minify-maven-plugin</artifactId>
                <version>1.7.6</version>
                <configuration>
                    <charset>UTF-8</charset>
                    <nosuffix>true</nosuffix>
                    <webappTargetDir>${project.build.outputDirectory}</webappTargetDir>
                </configuration>
                <executions>
                    <execution>
                        <id>minify-js</id>
                        <goals>
                            <goal>minify</goal>
                        </goals>
                        <configuration>
                            <webappSourceDir>${project.basedir}/src/main</webappSourceDir>
                            <jsSourceIncludes>
                                <include>*.js</include>
                            </jsSourceIncludes>
                            <jsEngine>CLOSURE</jsEngine>
                            <skipMerge>true</skipMerge>
                            <skipMinify>false</skipMinify>
                            <closureLanguageIn>ECMASCRIPT6</closureLanguageIn>
                        </configuration>
                    </execution>
                    <execution>
                        <id>minify-css</id>
                        <goals>
                            <goal>minify</goal>
                        </goals>
                        <configuration>
                            <webappSourceDir>${project.build.directory}</webappSourceDir>
                            <cssSourceDir>css</cssSourceDir>
                            <cssSourceIncludes>
                                <include>*.css</include>
                            </cssSourceIncludes>
                            <skipMerge>false</skipMerge>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.tunyk.mvn.plugins.htmlcompressor</groupId>
                <artifactId>htmlcompressor-maven-plugin</artifactId>
                <version>1.3</version>
                <executions>
                    <execution>
                        <id>compress-xsl</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>xml</goal>
                        </goals>
                        <configuration>
                            <srcFolder>${basedir}/src/main/xsl</srcFolder>
                            <targetFolder>${project.build.outputDirectory}/xsl</targetFolder>
                            <fileExt>
                                <ext>xsl</ext>
                            </fileExt>
                            <removeIntertagSpaces>false</removeIntertagSpaces>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <source>1.8</source>
              <target>1.8</target>
            </configuration>
          </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>takes-test</id>
            <activation>
                <property><name>!skipTests</name></property>
            </activation>
            <properties>
                <failsafe.sttc.urn>urn:test:1</failsafe.sttc.urn>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>reserve-network-port</goal>
                                </goals>
                                <configuration>
                                    <portNames>
                                        <portName>takes.port</portName>
                                    </portNames>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables combine.children="append">
                                <takes.home>http://localhost:${takes.port}</takes.home>
                            </systemPropertyVariables>
                            <reuseForks>false</reuseForks>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>start-takes-server</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <configuration>
                                    <mainClass>com.rultor.Entry</mainClass>
                                    <classpathScope>test</classpathScope>
                                    <cleanupDaemonThreads>false</cleanupDaemonThreads>
                                    <arguments>
                                        <argument>--port=${takes.port}</argument>
                                        <argument>--daemon=yes</argument>
                                    </arguments>
                                    <systemProperties>
                                        <property>
                                            <key>dynamo.port</key>
                                            <value>${dynamodblocal.port}</value>
                                        </property>
                                    </systemProperties>
                                </configuration>
                            </execution>
                            <execution>
                                <id>casperjs-install</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>git</executable>
                                    <workingDirectory>${project.build.directory}</workingDirectory>
                                    <arguments>
                                        <argument>clone</argument>
                                        <argument>--depth=1</argument>
                                        <argument>https://github.com/n1k0/casperjs.git</argument>
                                        <argument>casperjs-install</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>casperjs-test</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${project.build.directory}/casperjs-install/bin/casperjs</executable>
                                    <workingDirectory>${basedir}</workingDirectory>
                                    <arguments>
                                        <argument>test</argument>
                                        <argument>--verbose</argument>
                                        <argument>--no-colors</argument>
                                        <argument>--concise</argument>
                                        <argument>--home=http://localhost:${takes.port}</argument>
                                        <argument>--engine=phantomjs</argument>
                                        <argument>${basedir}/src/test/casperjs</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>dynamodb</id>
            <activation>
                <property><name>!skipTests</name></property>
            </activation>
            <properties>
                <failsafe.dynamo.key>AAAAABBBBBAAAAABBBBB</failsafe.dynamo.key>
                <failsafe.dynamo.secret>ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCD</failsafe.dynamo.secret>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack-dynamodb-local</id>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>com.jcabi</groupId>
                                            <artifactId>DynamoDBLocal</artifactId>
                                            <version>2014-01-08</version>
                                            <type>zip</type>
                                            <outputDirectory>${project.build.directory}/dynamodb-dist</outputDirectory>
                                            <overWrite>false</overWrite>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>reserver-dynamodb-port</id>
                                <goals>
                                    <goal>reserve-network-port</goal>
                                </goals>
                                <configuration>
                                    <portNames>
                                        <portName>dynamodblocal.port</portName>
                                    </portNames>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.jcabi</groupId>
                        <artifactId>jcabi-dynamodb-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dynamodb-integration-test</id>
                                <goals>
                                    <goal>start</goal>
                                    <goal>create-tables</goal>
                                    <goal>stop</goal>
                                </goals>
                                <configuration>
                                    <port>${dynamodblocal.port}</port>
                                    <dist>${project.build.directory}/dynamodb-dist</dist>
                                    <key>${failsafe.dynamo.key}</key>
                                    <secret>${failsafe.dynamo.secret}</secret>
                                    <tables>
                                        <table>${basedir}/src/test/dynamodb/talks.json</table>
                                    </tables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <parallel>none</parallel>
                            <systemPropertyVariables combine.children="append">
                                <dynamo.port>${dynamodblocal.port}</dynamo.port>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>hit-refresh</id>
            <properties>
                <failsafe.sttc.urn>urn:test:1</failsafe.sttc.urn>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>start-server</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <configuration>
                                    <mainClass>com.rultor.Entry</mainClass>
                                    <classpathScope>test</classpathScope>
                                    <cleanupDaemonThreads>false</cleanupDaemonThreads>
                                    <arguments>
                                        <argument>--port=${port}</argument>
                                    </arguments>
                                    <systemProperties>
                                        <property>
                                            <key>dynamo.port</key>
                                            <value>${dynamodblocal.port}</value>
                                        </property>
                                    </systemProperties>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>with-live-docker</id>
            <activation>
                <property><name>!skipTests</name></property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables combine.children="append">
                                <failsafe.docker.host>${failsafe.docker.host}</failsafe.docker.host>
                                <failsafe.docker.login>${failsafe.docker.login}</failsafe.docker.login>
                                <failsafe.docker.key>${failsafe.docker.key}</failsafe.docker.key>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>heroku</id>
            <activation>
                <file><exists>pom.xml</exists></file>
            </activation>
            <build>
                <finalName>rultor</finalName>
                <plugins>
                    <plugin>
                        <artifactId>maven-jar-plugin</artifactId>
                        <configuration>
                            <archive>
                                <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                            </archive>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-dependencies-for-heroku</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/deps</outputDirectory>
                                    <overWriteReleases>true</overWriteReleases>
                                    <overWriteSnapshots>true</overWriteSnapshots>
                                    <overWriteIfNewer>true</overWriteIfNewer>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>qulice</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.qulice</groupId>
                        <artifactId>qulice-maven-plugin</artifactId>
                        <configuration>
                            <excludes combine.children="append">
                                <exclude>checkstyle:/src/main/js/.*</exclude>
                                <exclude>checkstyle:/src/main/scss/.*</exclude>
                                <exclude>checkstyle:/src/test/casperjs/.*</exclude>
                                <exclude>checkstyle:/src/jekyll/guard-article.pdf</exclude>
                                <exclude>checkstyle:/src/jekyll/images/.*</exclude>
                                <exclude>findbugs:.*</exclude>
                                <exclude>duplicatefinder:.*</exclude>
                            </excludes>
                            <license>file:${basedir}/LICENSE.txt</license>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>exec-maven-plugin</artifactId>
                        <groupId>org.codehaus.mojo</groupId>
                        <executions>
                            <execution>
                                <id>Copyright check</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${basedir}/years.sh</executable>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>restrict-windows-build</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>fail-on-windows</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <phase>validate</phase>
                                <configuration>
                                    <rules>
                                        <alwaysFail>
                                            <message>
                                                You should use Unix-like or Mac OS to successfully build Rultor.
                                                With an other OS you are still able to check sources with the command:
                                                'mvn qulice:check -Pqulice'
                                            </message>
                                        </alwaysFail>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>dockerITs</id>
            <properties>
                <run-docker-tests>true</run-docker-tests>
            </properties>
        </profile>
        <profile>
            <id>coveralls</id>
            <activation>
                <file><exists>pom.xml</exists></file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>cobertura-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>pre-site</phase>
                                <goals>
                                    <goal>cobertura</goal>
                                </goals>
                                <configuration>
                                    <format>xml</format>
                                    <maxmem>256m</maxmem>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.eluder.coveralls</groupId>
                        <artifactId>coveralls-maven-plugin</artifactId>
                        <version>4.1.0</version>
                        <executions>
                            <execution>
                                <phase>site-deploy</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <repoToken>${coveralls.token}</repoToken>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jekyll</id>
            <activation>
                <file><exists>src/jekyll</exists></file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <inherited>false</inherited>
                        <executions>
                            <execution>
                                <id>bundle install</id>
                                <phase>pre-site</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>bundle</executable>
                                    <arguments>
                                        <argument>update</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>jekyll-build</id>
                                <phase>pre-site</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>bundle</executable>
                                    <arguments>
                                        <argument>exec</argument>
                                        <argument>jekyll</argument>
                                        <argument>build</argument>
                                        <argument>--source</argument>
                                        <argument>${basedir}/src/jekyll</argument>
                                        <argument>--destination</argument>
                                        <argument>${project.build.directory}/jekyll-site</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>jekyll-copy-license</id>
                                <phase>pre-site</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>cp</executable>
                                    <arguments>
                                        <argument>LICENSE.txt</argument>
                                        <argument>${project.build.directory}/jekyll-site</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>jekyll-copy-content</id>
                                <phase>post-site</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>cp</executable>
                                    <arguments>
                                        <argument>-ra</argument>
                                        <argument>${project.build.directory}/jekyll-site/.</argument>
                                        <argument>${project.build.directory}/site</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
